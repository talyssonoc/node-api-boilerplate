swagger: "2.0"
info:
  title: API Phalcon ATM
  version: v1
basePath: /api
schemes:
  - http
consumes:
  - application/json
paths:
  /users:
    get:
      operationId: usersList
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          examples:
            application/json: |-
              [
                {
                    "id": 1,
                    "name": "test"
                }
              ]
    post:
      operationId: userCreate
      produces:
      - application/json
      responses:
        "201":
          description: Created
          examples:
            application/json: |-
              {
                "id": 2,
                "name": "test2"
              }
        "400":
          description: Bad Request
          examples:
            application/json: |-
              {
                "type": "ValidationError",
                "details": [
                    {
                        "message": "\"name\" is required",
                        "path": "name"
                    }
                ]
              }  
  '/users/{userId}':
    put:
      operationId: userUpdate
      produces:
      - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Accepted
          examples:
            application/json: |-
              {
                "id": 1,
                "name": "test test"
              }
        "404":
          description: Not Found
          examples:
            application/json: |-
              {
                "type": "NotFoundError",
                "details": "User with id 3 can't be found."
              }
  '/users/{uId}':
    delete:
      operationId: userDelete
      produces:
      - application/json
      parameters:
        - name: uId
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Retorna todos os dados do cliente identificado
          examples:
            application/json: |-
              {[
              
              ]}
        "400":
          description: Erro de negócio
          examples:
            application/json: |-
              {
                "type": "InternalServerError",
                "message": "Informe o código do canal, ",
                "stack": "Error: Informe o código do canal, \n"
              }
        "500":  
          description: Erro de Sistema
          examples:
            application/json: |-
              {
                "type": "InternalServerError",
                "message": "Tempo excedido",
                "stack": "Error: connect ETIMEDOUT 10.0.2.205:80"
              }
  '/users/{id}':
    get:
      operationId: userList
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Return a specific user
          examples:
            application/json: |-
              {
                "id": 1,
                "name": "test"
              }
        "404":
          description: Not Found Error
          examples:
            application/json: |-
              {
                "type": "NotFoundError",
                "details": "User with id 2 can't be found."
              }
      